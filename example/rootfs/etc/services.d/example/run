#!/usr/bin/with-contenv bashio
# ==============================================================================
# Startet den Tibber Uploader Service zu einer bestimmten Tageszeit
# ==============================================================================

# Setzen Sie die gewünschte Startzeit (24-Stunden-Format)
TARGET_HOUR=1
TARGET_MINUTE=0

# Set environment variables from the add-on configuration
export METER_SENSOR=$(bashio::config 'meter_sensor')
export EMAIL=$(bashio::config 'email')
export PASSWORD=$(bashio::config 'password')

# Endlosschleife
while true; do
  # Aktuelle Stunde und Minute abrufen
  CURRENT_HOUR=$(date +"%H")
  CURRENT_MINUTE=$(date +"%M")

  # Berechnen, wie lange gewartet werden muss, bis die Zielzeit erreicht ist
  CURRENT_TIME=$(date +%s)
  # Berechnen Sie die Zeit bis zur Zielzeit heute
  TARGET_TIME=$(date -d "$TARGET_HOUR:$TARGET_MINUTE" +%s)
  # Wenn die Zielzeit heute schon vorbei ist, addieren Sie 24 Stunden (86400 Sekunden)
  if [ "$CURRENT_TIME" -gt "$TARGET_TIME" ]; then
    TARGET_TIME=$((TARGET_TIME + 86400))
  fi
  SLEEP_TIME=$((TARGET_TIME - CURRENT_TIME))

  # Warten bis zur Zielzeit
  echo "Nächster Start des Tibber Uploader Service ist geplant für $(date -d "@$((CURRENT_TIME + SLEEP_TIME))")"
  sleep "$SLEEP_TIME"

  # Log the start time and environment variables
  echo "=================================================================================================="
  echo "################ Starting Tibber Uploader service at $(date)" ################
  echo "=================================================================================================="

  # Starten Sie den Service
  python3 /usr/bin/main.py

  # Log the end time
  echo "=================================================================================================="
  echo "################ Tibber Uploader service finished at $(date)" ################
  echo "=================================================================================================="

  # Warten bis zur nächsten möglichen Ausführungszeit, um Mehrfachausführungen zu verhindern
  sleep 60
done
